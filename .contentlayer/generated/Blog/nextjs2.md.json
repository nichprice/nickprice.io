{
  "title": "Next.js, part 2",
  "date": "2023-03-17T00:00:00.000Z",
  "body": {
    "raw": "\nIn the last post we dove into the semantics of what Next.js is. We started by providing definitions for both “library” and “framework”. We then explained that React is a JavaScript library and that Next.js is a React framework\n\nThis context can be useful for communicating what Next.js is, but it doesn’t provide us much beyond a surface level understanding of what a framework is. Essentially, we could delete “Next.js” from the last post and replace it with any other React framework. This information is helpful, but let’s answer a few more questions.\n\n## Why do we have React Frameworks?\n\nLet’s rewind a few years to 2013. Daniel Day Lewis just won an Oscar for his prolific role as Abraham Lincoln, Thrift Shop by Macklemore was the #1 song in America, and _drumroll please..._ **Facebook released the first version of React**. Not only did React immediately revolutionize the way websites are built, Facebook release the software as open source. Open source software (OSS) is software that allows the public to use, study, change, and distribute the the source code to anyone for any purpose.\n\nThis is very important! React quickly became a hit for all the right reasons. The early versions were easy to learn, simple to use, and they allowed devs to quickly build and deploy web apps. It’s widespread use and adoption meant that there was a large cohort of people using the technology who were of course software engineers themselves.\n\nIf the devs using React wanted to add functionality or modify the source code to prevent bugs, they had the ability to do so because the software was open source! They didn’t have to sit around and wait for the React team at Facebook to put the time into making and releasing changes. They were able to take matters into their own hands. They began to tailor the software to better meet their needs by building custom React frameworks.\n\n## How does Next.js expand upon React?\n\nThere are many elements that set Next.js apart from React. Here we’ll expand on a few key features.\n\n### Routing\n\nOne of the first differences you’ll encounter when building with Next.js is the routing system. There are pluses and minuses to all routing systems. What’s nice about Next.js’s routing system is that it’s very simple and intuitive. Start with a folder called “app”. Inside “app”, create a folder with the title of a route you’d like to build. For example, you can create a folder called “blog” and create a file in that folder called “page”. In your page file, write the code that you’d like to render on your “/blog” webpage. You now have a frontend endpoint “/blog” with content. It’s that simple.\n\n### SEO\n\nSEO can be very important for the success of a website these days. The content of your website doesn’t matter all that much if no one can find it. Next.js has a multitude of built in features that can help developers optimize their SEO and get their website found.\n\n### Speed\n\nNext.js uses a few tricks that developers can use to make their webpages run faster. Server side rendering using getServerSideProps(), static site generation using getStaticProps(), and image component optimization using next/image can increase the speed at which your webpage renders on the client and provide an experience that users really enjoy.\n\n### TypeScript\n\nType-safety ensures that datatypes remain consistent. For example, you can define a variable as a boolean. This ensures that the variable will remain a boolean. You’ll never wind up with a scenario where a string \"true\" is output, the datatype will remain boolean. While React doesn’t offer TypeScript, Next.js supports TS out of the box. When you run create-next-app to create your project, you are prompted to select either JavaScript or TypeScript.\n\nNext.js is a powerful React framework that has many use cases. It offers modern and intuitive features that can help devs quickly build web apps. Next.js is a product made by Vercel, a company that offers a full suite of developer tools and services that seemlessly integrate with one another. While there are absolutely reasons not to use Next.js, especially under certain circumstances, there are also many reasons that developers love using Next.js. Try Next.js out on your next project and I’m sure you’ll find some features that you’ll wish Facebook made available years ago.\n",
    "html": "<p>In the last post we dove into the semantics of what Next.js is. We started by providing definitions for both “library” and “framework”. We then explained that React is a JavaScript library and that Next.js is a React framework</p>\n<p>This context can be useful for communicating what Next.js is, but it doesn’t provide us much beyond a surface level understanding of what a framework is. Essentially, we could delete “Next.js” from the last post and replace it with any other React framework. This information is helpful, but let’s answer a few more questions.</p>\n<h2>Why do we have React Frameworks?</h2>\n<p>Let’s rewind a few years to 2013. Daniel Day Lewis just won an Oscar for his prolific role as Abraham Lincoln, Thrift Shop by Macklemore was the #1 song in America, and <em>drumroll please...</em> <strong>Facebook released the first version of React</strong>. Not only did React immediately revolutionize the way websites are built, Facebook release the software as open source. Open source software (OSS) is software that allows the public to use, study, change, and distribute the the source code to anyone for any purpose.</p>\n<p>This is very important! React quickly became a hit for all the right reasons. The early versions were easy to learn, simple to use, and they allowed devs to quickly build and deploy web apps. It’s widespread use and adoption meant that there was a large cohort of people using the technology who were of course software engineers themselves.</p>\n<p>If the devs using React wanted to add functionality or modify the source code to prevent bugs, they had the ability to do so because the software was open source! They didn’t have to sit around and wait for the React team at Facebook to put the time into making and releasing changes. They were able to take matters into their own hands. They began to tailor the software to better meet their needs by building custom React frameworks.</p>\n<h2>How does Next.js expand upon React?</h2>\n<p>There are many elements that set Next.js apart from React. Here we’ll expand on a few key features.</p>\n<h3>Routing</h3>\n<p>One of the first differences you’ll encounter when building with Next.js is the routing system. There are pluses and minuses to all routing systems. What’s nice about Next.js’s routing system is that it’s very simple and intuitive. Start with a folder called “app”. Inside “app”, create a folder with the title of a route you’d like to build. For example, you can create a folder called “blog” and create a file in that folder called “page”. In your page file, write the code that you’d like to render on your “/blog” webpage. You now have a frontend endpoint “/blog” with content. It’s that simple.</p>\n<h3>SEO</h3>\n<p>SEO can be very important for the success of a website these days. The content of your website doesn’t matter all that much if no one can find it. Next.js has a multitude of built in features that can help developers optimize their SEO and get their website found.</p>\n<h3>Speed</h3>\n<p>Next.js uses a few tricks that developers can use to make their webpages run faster. Server side rendering using getServerSideProps(), static site generation using getStaticProps(), and image component optimization using next/image can increase the speed at which your webpage renders on the client and provide an experience that users really enjoy.</p>\n<h3>TypeScript</h3>\n<p>Type-safety ensures that datatypes remain consistent. For example, you can define a variable as a boolean. This ensures that the variable will remain a boolean. You’ll never wind up with a scenario where a string \"true\" is output, the datatype will remain boolean. While React doesn’t offer TypeScript, Next.js supports TS out of the box. When you run create-next-app to create your project, you are prompted to select either JavaScript or TypeScript.</p>\n<p>Next.js is a powerful React framework that has many use cases. It offers modern and intuitive features that can help devs quickly build web apps. Next.js is a product made by Vercel, a company that offers a full suite of developer tools and services that seemlessly integrate with one another. While there are absolutely reasons not to use Next.js, especially under certain circumstances, there are also many reasons that developers love using Next.js. Try Next.js out on your next project and I’m sure you’ll find some features that you’ll wish Facebook made available years ago.</p>"
  },
  "_id": "nextjs2.md",
  "_raw": {
    "sourceFilePath": "nextjs2.md",
    "sourceFileName": "nextjs2.md",
    "sourceFileDir": ".",
    "contentType": "markdown",
    "flattenedPath": "nextjs2"
  },
  "type": "Blog",
  "slug": "nextjs2"
}